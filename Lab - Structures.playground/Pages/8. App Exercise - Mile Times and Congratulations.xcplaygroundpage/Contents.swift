 struct RunningWorkout {     // Беговая разминка
    var distance: Double    // Пройденное расстояние
    var time: Double        // Потраченное время
    var elevation: Double   // Изменение высоты над уровнем моря
}
/*:
 В других упражнениях для приложения, вы ободряли пользователей сообщениями на основе того, как много шагов они прошли. Удобное место для проверки необходимости вывода такой информации — это наблюдатели свойств.
 
 В структуре `Steps` ниже, добавьте наблюдатель `willSet` к свойству `steps`, который будет проверять, достигло ли новое значение `newValue` цели, и, в случае достижения, выводить в консоль поздравительное сообщение. Создайте экземпляр типа `Steps` со значением `steps`, равным 9999, а `goal` — равным 10000, затем вызовите `takeStep()` и посмотрите, выводится ли ваше сообщение.
 */
struct Steps {
    var steps: Int {
        willSet {
            if newValue >= goal {
                print("Congratylation you done it!")
            }
        }
    }
    var goal: Int
    
    mutating func takeStep() {
        steps += 1
    }
}
 var steps = Steps(steps: 9998, goal: 10000)
 steps.takeStep()
//: [Ранее](@previous)  |  страница 8 из 10  |  [Далее: упражнение — свойства и методы типов](@next)
